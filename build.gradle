plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}
apply plugin: 'kotlin-kapt'


group 'com.theapache64'
version '1.0.2'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // Picocli A Mighty Tiny Command Line Interface : Java command line parser with both an annotations API and a programmatic API. Usage
    // help with ANSI styles and colors. Autocomplete. Nested subcommands. Easily included
    // as source to avoid adding a dependency.
    implementation 'info.picocli:picocli:4.5.0'

    // Picocli Codegen : Picocli Code Generation - Tools to generate documentation, configuration, source
    // code and other files from a picocli model.
    kapt 'info.picocli:picocli-codegen:4.5.0'

    // Dagger : A fast dependency injector for Android and Java.
    implementation 'com.google.dagger:dagger:2.28.3'

    // Dagger Compiler : Tools to generate Dagger injection and module adapters from annotated code and validate
    // them.
    kapt 'com.google.dagger:dagger-compiler:2.28.3'

	// Kotlinx Coroutines Core : Coroutines support libraries for Kotlin
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8-1.4.0-rc'

	// Retrofit : A type-safe HTTP client for Android and Java.
	implementation 'com.squareup.retrofit2:retrofit:2.9.0'

	// Converter: Scalars : A Retrofit Converter for Java's scalar value types.
	implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

	// Converter: Moshi : A Retrofit Converter which uses Moshi for serialization.
	implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    implementation 'com.theapache64:retrosheet:1.2.1'

	// Moshi Kotlin Codegen : Moshi Kotlin Codegen
	kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.3'

	// Moshi : Moshi
	implementation 'com.squareup.moshi:moshi:1.9.3'

	// Expekt : BDD assertion library for Kotlin
	testImplementation 'com.winterbe:expekt:0.5.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}